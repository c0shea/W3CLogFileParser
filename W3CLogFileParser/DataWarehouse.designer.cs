#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W3CLogFileParser
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataWarehouse")]
	public partial class DataWarehouseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertIisRequest(IisRequest instance);
    partial void UpdateIisRequest(IisRequest instance);
    partial void DeleteIisRequest(IisRequest instance);
    #endregion
		
		public DataWarehouseDataContext() : 
				base(global::W3CLogFileParser.Properties.Settings.Default.DataWarehouseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataWarehouseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWarehouseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWarehouseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataWarehouseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IisRequest> IisRequests
		{
			get
			{
				return this.GetTable<IisRequest>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Logs.IisRequest")]
	public partial class IisRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.DateTime _InsertDate;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<System.TimeSpan> _Time;
		
		private string _ServerName;
		
		private System.Data.Linq.Binary _ServerIP;
		
		private System.Nullable<int> _ServerPort;
		
		private string _Method;
		
		private string _UriStem;
		
		private string _UriQuery;
		
		private System.Nullable<short> _TimeTakenInMilliseconds;
		
		private System.Nullable<short> _ProtocolStatus;
		
		private System.Nullable<short> _ProtocolSubstatus;
		
		private string _ProtocolVersion;
		
		private System.Data.Linq.Binary _ClientIP;
		
		private string _UserAgent;
		
		private string _Referrer;
		
		private string _Username;
		
		private string _Cookie;
		
		private System.Nullable<short> _Win32Status;
		
		private string _ServiceName;
		
		private string _Host;
		
		private System.Nullable<long> _BytesSent;
		
		private System.Nullable<long> _BytesReceived;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnTimeChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnServerIPChanging(System.Data.Linq.Binary value);
    partial void OnServerIPChanged();
    partial void OnServerPortChanging(System.Nullable<int> value);
    partial void OnServerPortChanged();
    partial void OnMethodChanging(string value);
    partial void OnMethodChanged();
    partial void OnUriStemChanging(string value);
    partial void OnUriStemChanged();
    partial void OnUriQueryChanging(string value);
    partial void OnUriQueryChanged();
    partial void OnTimeTakenInMillisecondsChanging(System.Nullable<short> value);
    partial void OnTimeTakenInMillisecondsChanged();
    partial void OnProtocolStatusChanging(System.Nullable<short> value);
    partial void OnProtocolStatusChanged();
    partial void OnProtocolSubstatusChanging(System.Nullable<short> value);
    partial void OnProtocolSubstatusChanged();
    partial void OnProtocolVersionChanging(string value);
    partial void OnProtocolVersionChanged();
    partial void OnClientIPChanging(System.Data.Linq.Binary value);
    partial void OnClientIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnReferrerChanging(string value);
    partial void OnReferrerChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnCookieChanging(string value);
    partial void OnCookieChanged();
    partial void OnWin32StatusChanging(System.Nullable<short> value);
    partial void OnWin32StatusChanged();
    partial void OnServiceNameChanging(string value);
    partial void OnServiceNameChanged();
    partial void OnHostChanging(string value);
    partial void OnHostChanged();
    partial void OnBytesSentChanging(System.Nullable<long> value);
    partial void OnBytesSentChanged();
    partial void OnBytesReceivedChanging(System.Nullable<long> value);
    partial void OnBytesReceivedChanged();
    #endregion
		
		public IisRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this.OnInsertDateChanging(value);
					this.SendPropertyChanging();
					this._InsertDate = value;
					this.SendPropertyChanged("InsertDate");
					this.OnInsertDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="Time")]
		public System.Nullable<System.TimeSpan> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="VarChar(63)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerIP", DbType="VarBinary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ServerIP
		{
			get
			{
				return this._ServerIP;
			}
			set
			{
				if ((this._ServerIP != value))
				{
					this.OnServerIPChanging(value);
					this.SendPropertyChanging();
					this._ServerIP = value;
					this.SendPropertyChanged("ServerIP");
					this.OnServerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerPort", DbType="Int")]
		public System.Nullable<int> ServerPort
		{
			get
			{
				return this._ServerPort;
			}
			set
			{
				if ((this._ServerPort != value))
				{
					this.OnServerPortChanging(value);
					this.SendPropertyChanging();
					this._ServerPort = value;
					this.SendPropertyChanged("ServerPort");
					this.OnServerPortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="VarChar(10)")]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this.OnMethodChanging(value);
					this.SendPropertyChanging();
					this._Method = value;
					this.SendPropertyChanged("Method");
					this.OnMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UriStem", DbType="VarChar(2100)")]
		public string UriStem
		{
			get
			{
				return this._UriStem;
			}
			set
			{
				if ((this._UriStem != value))
				{
					this.OnUriStemChanging(value);
					this.SendPropertyChanging();
					this._UriStem = value;
					this.SendPropertyChanged("UriStem");
					this.OnUriStemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UriQuery", DbType="VarChar(2100)")]
		public string UriQuery
		{
			get
			{
				return this._UriQuery;
			}
			set
			{
				if ((this._UriQuery != value))
				{
					this.OnUriQueryChanging(value);
					this.SendPropertyChanging();
					this._UriQuery = value;
					this.SendPropertyChanged("UriQuery");
					this.OnUriQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeTakenInMilliseconds", DbType="SmallInt")]
		public System.Nullable<short> TimeTakenInMilliseconds
		{
			get
			{
				return this._TimeTakenInMilliseconds;
			}
			set
			{
				if ((this._TimeTakenInMilliseconds != value))
				{
					this.OnTimeTakenInMillisecondsChanging(value);
					this.SendPropertyChanging();
					this._TimeTakenInMilliseconds = value;
					this.SendPropertyChanged("TimeTakenInMilliseconds");
					this.OnTimeTakenInMillisecondsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolStatus", DbType="SmallInt")]
		public System.Nullable<short> ProtocolStatus
		{
			get
			{
				return this._ProtocolStatus;
			}
			set
			{
				if ((this._ProtocolStatus != value))
				{
					this.OnProtocolStatusChanging(value);
					this.SendPropertyChanging();
					this._ProtocolStatus = value;
					this.SendPropertyChanged("ProtocolStatus");
					this.OnProtocolStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolSubstatus", DbType="SmallInt")]
		public System.Nullable<short> ProtocolSubstatus
		{
			get
			{
				return this._ProtocolSubstatus;
			}
			set
			{
				if ((this._ProtocolSubstatus != value))
				{
					this.OnProtocolSubstatusChanging(value);
					this.SendPropertyChanging();
					this._ProtocolSubstatus = value;
					this.SendPropertyChanged("ProtocolSubstatus");
					this.OnProtocolSubstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtocolVersion", DbType="VarChar(10)")]
		public string ProtocolVersion
		{
			get
			{
				return this._ProtocolVersion;
			}
			set
			{
				if ((this._ProtocolVersion != value))
				{
					this.OnProtocolVersionChanging(value);
					this.SendPropertyChanging();
					this._ProtocolVersion = value;
					this.SendPropertyChanged("ProtocolVersion");
					this.OnProtocolVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIP", DbType="VarBinary(16)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary ClientIP
		{
			get
			{
				return this._ClientIP;
			}
			set
			{
				if ((this._ClientIP != value))
				{
					this.OnClientIPChanging(value);
					this.SendPropertyChanging();
					this._ClientIP = value;
					this.SendPropertyChanged("ClientIP");
					this.OnClientIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="VarChar(512)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Referrer", DbType="VarChar(1000)")]
		public string Referrer
		{
			get
			{
				return this._Referrer;
			}
			set
			{
				if ((this._Referrer != value))
				{
					this.OnReferrerChanging(value);
					this.SendPropertyChanging();
					this._Referrer = value;
					this.SendPropertyChanged("Referrer");
					this.OnReferrerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(1000)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cookie", DbType="VarChar(1000)")]
		public string Cookie
		{
			get
			{
				return this._Cookie;
			}
			set
			{
				if ((this._Cookie != value))
				{
					this.OnCookieChanging(value);
					this.SendPropertyChanging();
					this._Cookie = value;
					this.SendPropertyChanged("Cookie");
					this.OnCookieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Win32Status", DbType="SmallInt")]
		public System.Nullable<short> Win32Status
		{
			get
			{
				return this._Win32Status;
			}
			set
			{
				if ((this._Win32Status != value))
				{
					this.OnWin32StatusChanging(value);
					this.SendPropertyChanging();
					this._Win32Status = value;
					this.SendPropertyChanged("Win32Status");
					this.OnWin32StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="VarChar(100)")]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this.OnServiceNameChanging(value);
					this.SendPropertyChanging();
					this._ServiceName = value;
					this.SendPropertyChanged("ServiceName");
					this.OnServiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Host", DbType="VarChar(1000)")]
		public string Host
		{
			get
			{
				return this._Host;
			}
			set
			{
				if ((this._Host != value))
				{
					this.OnHostChanging(value);
					this.SendPropertyChanging();
					this._Host = value;
					this.SendPropertyChanged("Host");
					this.OnHostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesSent", DbType="BigInt")]
		public System.Nullable<long> BytesSent
		{
			get
			{
				return this._BytesSent;
			}
			set
			{
				if ((this._BytesSent != value))
				{
					this.OnBytesSentChanging(value);
					this.SendPropertyChanging();
					this._BytesSent = value;
					this.SendPropertyChanged("BytesSent");
					this.OnBytesSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesReceived", DbType="BigInt")]
		public System.Nullable<long> BytesReceived
		{
			get
			{
				return this._BytesReceived;
			}
			set
			{
				if ((this._BytesReceived != value))
				{
					this.OnBytesReceivedChanging(value);
					this.SendPropertyChanging();
					this._BytesReceived = value;
					this.SendPropertyChanged("BytesReceived");
					this.OnBytesReceivedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
